<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>王天雨的博客</title>
  <subtitle>Rain&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wty.im/"/>
  <updated>2016-09-26T04:30:27.000Z</updated>
  <id>http://wty.im/</id>
  
  <author>
    <name>王天雨</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>获取当前最顶层的ViewController</title>
    <link href="http://wty.im/2016/09/26/get-topmost-view-controller/"/>
    <id>http://wty.im/2016/09/26/get-topmost-view-controller/</id>
    <published>2016-09-26T01:54:22.000Z</published>
    <updated>2016-09-26T04:30:27.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在iOS中开放中，我们可能会遇到需要通过代码获取当前显示在屏幕最顶层的ViewController，比如我们需要在最顶层的ViewController上展示一个UIAlertController的时候。本文将介绍如何获取最顶层的ViewController&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;实现思路&quot;&gt;&lt;a href=&quot;#实现思路&quot; class=&quot;headerlink&quot; title=&quot;实现思路&quot;&gt;&lt;/a&gt;实现思路&lt;/h2&gt;&lt;p&gt;通过最底层的ViewController依次向上寻找，直到找到最顶层的ViewController，也就是从UIApplication的keyWindow的rootViewController开始寻找（如果有多个UIWindow则要考虑UIWindow的选择问题。&lt;/p&gt;
&lt;p&gt;在寻找的过程中，要分别考虑当前ViewController是UITabBarController和UINavigationController的情况，同时还要考虑到当前ViewController是否通过&lt;code&gt;presentViewController:animated:completion:&lt;/code&gt;模态展示了其他ViewController。&lt;/p&gt;
&lt;h2 id=&quot;实现方法&quot;&gt;&lt;a href=&quot;#实现方法&quot; class=&quot;headerlink&quot; title=&quot;实现方法&quot;&gt;&lt;/a&gt;实现方法&lt;/h2&gt;&lt;p&gt;直接上代码&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIViewController&lt;/span&gt; *)topViewController &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UIViewController&lt;/span&gt; *resultVC;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resultVC = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; _topViewController:[[&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; sharedApplication].keyWindow rootViewController]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (resultVC.presentedViewController) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        resultVC = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; _topViewController:resultVC.presentedViewController];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; resultVC;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIViewController&lt;/span&gt; *)_topViewController:(&lt;span class=&quot;built_in&quot;&gt;UIViewController&lt;/span&gt; *)vc &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([vc isKindOfClass:[&lt;span class=&quot;built_in&quot;&gt;UINavigationController&lt;/span&gt; class]]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; _topViewController:[(&lt;span class=&quot;built_in&quot;&gt;UINavigationController&lt;/span&gt; *)vc topViewController]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([vc isKindOfClass:[&lt;span class=&quot;built_in&quot;&gt;UITabBarController&lt;/span&gt; class]]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; _topViewController:[(&lt;span class=&quot;built_in&quot;&gt;UITabBarController&lt;/span&gt; *)vc selectedViewController]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; vc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用方法&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UIViewController&lt;/span&gt; *topmostVC = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; topViewController];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在iOS中开放中，我们可能会遇到需要通过代码获取当前显示在屏幕最顶层的ViewController，比如我们需要在最顶层的ViewController上展示一个UIAlertController的时候。本文将介绍如何获取最顶层的ViewController&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://wty.im/categories/iOS/"/>
    
    
      <category term="iOS开发" scheme="http://wty.im/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>不用私有API，一行代码获取当前响应链的First Responder</title>
    <link href="http://wty.im/2016/09/22/get-the-first-responder/"/>
    <id>http://wty.im/2016/09/22/get-the-first-responder/</id>
    <published>2016-09-21T16:31:22.000Z</published>
    <updated>2016-09-26T04:29:16.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在iOS中，当发生事件响应时，必须知道由谁来响应事件。而UIResponder类就是专门用来响应用户的操作，处理各种事件的，包括触摸事件(Touch Events)、运动事件(Motion Events)和远程控制事件(Remote Control Events)。iOS处理事件的流程将遵循一个不同对象组成的层次结构，也就是响应者链(Responder Chain)，网上目前有很多关于响应者链的介绍，这里就不再细讲。在响应者链中非常重要的一个概念就是第一响应者(First Responder)，当前第一响应者负责响应事件，或将事件传递给下一响应者。&lt;/p&gt;
&lt;p&gt;在编写iOS程序时，我们经常会遇到需要获取当前的第一响应者，例如系统弹出键盘时，我们希望得到当前输入框(也就是第一响应者)的Frame，从而调整视图避免键盘遮挡输入框。然而UIKit并没有提供官方的API专门用于该用途。本文将介绍一种非常简单的且未用到私有API的方法来获取当前第一响应者。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;实现思路&quot;&gt;&lt;a href=&quot;#实现思路&quot; class=&quot;headerlink&quot; title=&quot;实现思路&quot;&gt;&lt;/a&gt;实现思路&lt;/h2&gt;&lt;h3 id=&quot;常规思路&quot;&gt;&lt;a href=&quot;#常规思路&quot; class=&quot;headerlink&quot; title=&quot;常规思路&quot;&gt;&lt;/a&gt;常规思路&lt;/h3&gt;&lt;p&gt;通过遍历当前UIWindow的所有子视图，从而找到当前的第一响应者。这种方法首先需要做非常多的递归调用，从而判断所有子视图，同时当前响应链上的第一响应者还有可能是子视图的ViewController，这种方法也会漏掉。&lt;/p&gt;
&lt;h3 id=&quot;使用私有API的思路&quot;&gt;&lt;a href=&quot;#使用私有API的思路&quot; class=&quot;headerlink&quot; title=&quot;使用私有API的思路&quot;&gt;&lt;/a&gt;使用私有API的思路&lt;/h3&gt;&lt;p&gt;使用苹果的私有API可以很容易地解决这个问题，然而苹果不会允许使用私有API的App上架App Store，而且私有API很有可能随时变化，所以这种方式也很不完美。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UIWindow&lt;/span&gt; *keyWindow = [[&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; sharedApplication] keyWindow];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; *firstResponder = [keyWindow performSelector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(firstResponder)];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;本文的思路&quot;&gt;&lt;a href=&quot;#本文的思路&quot; class=&quot;headerlink&quot; title=&quot;本文的思路&quot;&gt;&lt;/a&gt;本文的思路&lt;/h3&gt;&lt;p&gt;本文的思路用到的核心Public API就是&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)sendAction:(SEL)action to:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)target from:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)sender forEvent:(&lt;span class=&quot;built_in&quot;&gt;UIEvent&lt;/span&gt; *)event&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;苹果文档对该API的target参数的描述如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The object to receive the action message. If target is nil, the app sends the message to the first responder, from whence it progresses up the responder chain until it is handled.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从而可知，利用该API，只要将传入的&lt;code&gt;target&lt;/code&gt;设置为&lt;code&gt;nil&lt;/code&gt;，则系统会自动顺着响应链查找能够响应&lt;code&gt;action&lt;/code&gt;的响应者。我们只需让所有&lt;code&gt;UIResponder&lt;/code&gt;的子类都响应我们自定义的&lt;code&gt;action&lt;/code&gt;，即可知道当前第一响应者是哪个对象。&lt;/p&gt;
&lt;h2 id=&quot;实现方法&quot;&gt;&lt;a href=&quot;#实现方法&quot; class=&quot;headerlink&quot; title=&quot;实现方法&quot;&gt;&lt;/a&gt;实现方法&lt;/h2&gt;&lt;p&gt;为实现本文的思路，我们需要为&lt;code&gt;UIResponder&lt;/code&gt;提供一个Category(objc)/Extension(swift)。&lt;/p&gt;
&lt;h3 id=&quot;Objective-C&quot;&gt;&lt;a href=&quot;#Objective-C&quot; class=&quot;headerlink&quot; title=&quot;Objective-C&quot;&gt;&lt;/a&gt;Objective-C&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// UIResponder+WTYFirstResponder.h&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;UIKit/UIKit.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UIResponder&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;WTYFirstResponder&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//使用时只需要对UIResponder类调用该类方法即可获得当前第一响应者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)wty_currentFirstResponder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  UIResponder+WTYFirstResponder.m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;UIResponder+WTYFirstResponder.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; __&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; wty_currentFirstResponder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UIResponder&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;WTYFirstResponder&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)wty_currentFirstResponder &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    wty_currentFirstResponder = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 通过将target设置为nil，让系统自动遍历响应链&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 从而响应链当前第一响应者响应我们自定义的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [[&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; sharedApplication] sendAction:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(wty_findFirstResponder:) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                               to:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                             from:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                         forEvent:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; wty_currentFirstResponder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)wty_findFirstResponder:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)sender &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 第一响应者会响应这个方法，并且将静态变量wty_currentFirstResponder设置为自己&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    wty_currentFirstResponder = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用方法&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;UIResponder+WTYFirstResponder.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; firstResponder = [&lt;span class=&quot;built_in&quot;&gt;UIResponder&lt;/span&gt; wty_firstResponder];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Swift&quot;&gt;&lt;a href=&quot;#Swift&quot; class=&quot;headerlink&quot; title=&quot;Swift&quot;&gt;&lt;/a&gt;Swift&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  UIResponder+WTYFirstResponder.swift&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; UIKit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; wty_currentFirstResponder: &lt;span class=&quot;type&quot;&gt;AnyObject&lt;/span&gt;?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UIResponder&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;wty_firstResponder&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;AnyObject&lt;/span&gt;? &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        wty_currentFirstResponder = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 通过将target设置为nil，让系统自动遍历响应链&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 从而响应链当前第一响应者响应我们自定义的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;UIApplication&lt;/span&gt;.shared.sendAction(#selector(wty_findFirstResponder(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;:)), to: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, from: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; wty_currentFirstResponder&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;wty_findFirstResponder&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; sender: AnyObject)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 第一响应者会响应这个方法，并且将静态变量wty_currentFirstResponder设置为自己&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        wty_currentFirstResponder = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用方法&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;firstResponder = &lt;span class=&quot;type&quot;&gt;UIResponder&lt;/span&gt;.wty_firstResponder()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;思路衍生&quot;&gt;&lt;a href=&quot;#思路衍生&quot; class=&quot;headerlink&quot; title=&quot;思路衍生&quot;&gt;&lt;/a&gt;思路衍生&lt;/h2&gt;&lt;p&gt;如果只希望让第一响应者取消其第一响应者的状态，则可以做如下操作:&lt;/p&gt;
&lt;p&gt;Objective-C&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; sharedApplication] sendAction:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(resignFirstResponder) to:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; from:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; forEvent:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Swift&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;UIApplication&lt;/span&gt;.shared.sendAction(#selector(resignFirstResponder), to: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, from: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Github-Repo&quot;&gt;&lt;a href=&quot;#Github-Repo&quot; class=&quot;headerlink&quot; title=&quot;Github Repo&quot;&gt;&lt;/a&gt;Github Repo&lt;/h2&gt;&lt;p&gt;本文所用的代码可以在我的&lt;a href=&quot;https://github.com/wty21cn/WTYFirstResponder&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;上找到，如果觉得好用的话请并忙点个星星。&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在iOS中，当发生事件响应时，必须知道由谁来响应事件。而UIResponder类就是专门用来响应用户的操作，处理各种事件的，包括触摸事件(Touch Events)、运动事件(Motion Events)和远程控制事件(Remote Control Events)。iOS处理事件的流程将遵循一个不同对象组成的层次结构，也就是响应者链(Responder Chain)，网上目前有很多关于响应者链的介绍，这里就不再细讲。在响应者链中非常重要的一个概念就是第一响应者(First Responder)，当前第一响应者负责响应事件，或将事件传递给下一响应者。&lt;/p&gt;
&lt;p&gt;在编写iOS程序时，我们经常会遇到需要获取当前的第一响应者，例如系统弹出键盘时，我们希望得到当前输入框(也就是第一响应者)的Frame，从而调整视图避免键盘遮挡输入框。然而UIKit并没有提供官方的API专门用于该用途。本文将介绍一种非常简单的且未用到私有API的方法来获取当前第一响应者。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://wty.im/categories/iOS/"/>
    
    
      <category term="iOS开发" scheme="http://wty.im/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>删除TableView中单个cell的分割线</title>
    <link href="http://wty.im/2016/03/21/delete-tableview-separator-for-a-single-cell/"/>
    <id>http://wty.im/2016/03/21/delete-tableview-separator-for-a-single-cell/</id>
    <published>2016-03-21T03:23:22.000Z</published>
    <updated>2016-07-09T06:52:31.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在iOS开发中，我们最常使用的UIKit控件之一就是UITableView，默认情况下我们可以通过UITableView的separatorStyle属性来更改所有cell的分割线样式，但是有时我们会遇到需要更改单独一个cell的分割线的需求，比如删除最下面一行cell的分割线，这是separatorStyle属性就不能满足要求了。为了达到目的我们可以采用的方法之一是将separatorStyle设置成为UITableViewCellSeparatorStyleNone，去掉默认的分割线，然后自定义cell，手动在需要的行添加分割线，这么做灵活性很高，适用于各种UITableView的使用场景。&lt;/p&gt;
&lt;p&gt;上面提到的方法在某些简单的场景中显得过于复杂，比如用于不可滚动的TableView中。本文将介绍另一种实现此需求的简单方法。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;实现思路&quot;&gt;&lt;a href=&quot;#实现思路&quot; class=&quot;headerlink&quot; title=&quot;实现思路&quot;&gt;&lt;/a&gt;实现思路&lt;/h2&gt;&lt;p&gt;本方法是通过调整UITableViewCell的separatorInset属性来实现删除单个cell的分割线。&lt;/p&gt;
&lt;p&gt;在iOS7之前可以通过增大分割线左侧的inset使整个分割线移出屏幕，但是到了iOS8及以后的版本中，系统不再允许将分割线移出屏幕，因此我们必须另想其他方法。因为UITableViewCell的separatorInset可以同时设置分割线左端和右端的inset，因此当我们将两端的inset分别设置为整个cell宽度的一半时，就会将中间的分割线的宽度压缩至0，此时相当于将该cell的分割线删除。&lt;/p&gt;
&lt;h2 id=&quot;实现方法&quot;&gt;&lt;a href=&quot;#实现方法&quot; class=&quot;headerlink&quot; title=&quot;实现方法&quot;&gt;&lt;/a&gt;实现方法&lt;/h2&gt;&lt;p&gt;因为此方法是根据当前cell宽度来计算并压缩分割线的，所以要考虑到当cell宽度改变时，比如orientation改变，需要重新计算inset的宽度，所以我们将在viewWillLayoutSubviews中进行处理，实现如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewWillLayoutSubviews &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewWillLayoutSubviews];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//除去最后一个TableViewCell下方的分割线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UITableViewCell&lt;/span&gt; *cell = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.tableView.visibleCells lastObject];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cell.separatorInset = &lt;span class=&quot;built_in&quot;&gt;UIEdgeInsetsMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;CGRectGetWidth&lt;/span&gt;(cell.bounds)/&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;CGRectGetWidth&lt;/span&gt;(cell.bounds)/&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在iOS开发中，我们最常使用的UIKit控件之一就是UITableView，默认情况下我们可以通过UITableView的separatorStyle属性来更改所有cell的分割线样式，但是有时我们会遇到需要更改单独一个cell的分割线的需求，比如删除最下面一行cell的分割线，这是separatorStyle属性就不能满足要求了。为了达到目的我们可以采用的方法之一是将separatorStyle设置成为UITableViewCellSeparatorStyleNone，去掉默认的分割线，然后自定义cell，手动在需要的行添加分割线，这么做灵活性很高，适用于各种UITableView的使用场景。&lt;/p&gt;
&lt;p&gt;上面提到的方法在某些简单的场景中显得过于复杂，比如用于不可滚动的TableView中。本文将介绍另一种实现此需求的简单方法。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://wty.im/categories/iOS/"/>
    
    
      <category term="iOS开发" scheme="http://wty.im/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="UITableView" scheme="http://wty.im/tags/UITableView/"/>
    
  </entry>
  
  <entry>
    <title>在Storyboard中使用由xib定义的view</title>
    <link href="http://wty.im/2016/02/29/use-view-defined-by-xib-in-storyboard/"/>
    <id>http://wty.im/2016/02/29/use-view-defined-by-xib-in-storyboard/</id>
    <published>2016-02-29T07:41:22.000Z</published>
    <updated>2016-03-18T01:14:10.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在iOS开发中，使用storyboard的某些场景下我们可能希望同时使用xib定义一些可以重复利用的view，并在storyboard中调用。本文将分享一种此类xib bridge的简单实现方式。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;实现思路&quot;&gt;&lt;a href=&quot;#实现思路&quot; class=&quot;headerlink&quot; title=&quot;实现思路&quot;&gt;&lt;/a&gt;实现思路&lt;/h2&gt;&lt;p&gt;本方法的思路是将xib的File’s Owner所对应的UIView作为&lt;code&gt;placeholderView&lt;/code&gt;，其作用只是在storyboard中起到占位作用，并承载storyboard中与xib自定义view相关的AutoLayout约束，其背景色将被设为&lt;code&gt;[UIColor clearColor]&lt;/code&gt;，并且不显示任何内容。显示自定义内容的任务将交给一个&lt;code&gt;UIView&lt;/code&gt;–&lt;code&gt;contentView&lt;/code&gt;，它将作为&lt;code&gt;placeholderView&lt;/code&gt;的子视图。&lt;/p&gt;
&lt;p&gt;为了使在storyboard中作用于&lt;code&gt;placeholderView&lt;/code&gt;的AutoLayout约束能够自动的作用于&lt;code&gt;contentView&lt;/code&gt;，可以向&lt;code&gt;placeholderView&lt;/code&gt;添加&lt;code&gt;NSLayoutRelationEqual&lt;/code&gt;约束，让&lt;code&gt;placeholderView&lt;/code&gt;和&lt;code&gt;contentView&lt;/code&gt;的上下左右四个&lt;code&gt;NSLayoutAttribute&lt;/code&gt;分别完全相等，这样&lt;code&gt;contentView&lt;/code&gt;在storyboard中的的frame将完全和placeholderView相同，从而达到目的。&lt;/p&gt;
&lt;p&gt;以上方法同样可以适用于xib的某个子view是另外一个xib的情形。&lt;/p&gt;
&lt;h2 id=&quot;实现方法&quot;&gt;&lt;a href=&quot;#实现方法&quot; class=&quot;headerlink&quot; title=&quot;实现方法&quot;&gt;&lt;/a&gt;实现方法&lt;/h2&gt;&lt;h3 id=&quot;首先进行如下准备工作&quot;&gt;&lt;a href=&quot;#首先进行如下准备工作&quot; class=&quot;headerlink&quot; title=&quot;首先进行如下准备工作&quot;&gt;&lt;/a&gt;首先进行如下准备工作&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;创建一个xib，用于实现子view的自定义内容，本文中命名为&lt;code&gt;CoverView.xib&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;创建一个&lt;code&gt;UIView&lt;/code&gt;的子类，作为&lt;code&gt;placeholderView&lt;/code&gt;的基类，用于进行xib bridge相关的添加约束和添加&lt;code&gt;contentView&lt;/code&gt;等工作，本文中命名为&lt;code&gt;XibBridgeBaseView&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;创建一个&lt;code&gt;XibBridgeBaseView&lt;/code&gt;的子类，用于存储xib中自定义内容的相关属性并进行相关操作，本文中命名为&lt;code&gt;CoverView&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;实现子view的xib文件&quot;&gt;&lt;a href=&quot;#实现子view的xib文件&quot; class=&quot;headerlink&quot; title=&quot;实现子view的xib文件&quot;&gt;&lt;/a&gt;实现子view的xib文件&lt;/h3&gt;&lt;p&gt;首先需要在identity inspector中将xib文件的File’s Owner设置成为创建好的&lt;code&gt;CoverView&lt;/code&gt;类&lt;br&gt;&lt;img src=&quot;/images/Files-Owner-identity-inspector.jpg&quot; alt=&quot;Files-Owner-identity-inspector&quot;&gt;&lt;/p&gt;
&lt;p&gt;接下来我们就可以在xib中自动创建的&lt;code&gt;UIView&lt;/code&gt;子视图中进行自定义UI了，此时可以在&lt;code&gt;CoverView&lt;/code&gt;类中创建该&lt;code&gt;UIView&lt;/code&gt;子视图(这里命名为&lt;code&gt;contentView&lt;/code&gt;)以及其他UI组件的&lt;code&gt;IBAction&lt;/code&gt;和&lt;code&gt;IBOutlet&lt;/code&gt;等。&lt;br&gt;&lt;img src=&quot;/images/setup-IBOutlet-and-IBAction.jpg&quot; alt=&quot;setup-IBOutlet-and-IBAction&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;实现占位视图的基类&quot;&gt;&lt;a href=&quot;#实现占位视图的基类&quot; class=&quot;headerlink&quot; title=&quot;实现占位视图的基类&quot;&gt;&lt;/a&gt;实现占位视图的基类&lt;/h3&gt;&lt;p&gt;作为&lt;code&gt;placeholderView&lt;/code&gt;的基类，&lt;code&gt;XibBridgeBaseView&lt;/code&gt;中定义了如下的一个方法，用于从nib中载入contentView并添加进占位视图的子视图中，其中&lt;code&gt;XibBridgeBaseView&lt;/code&gt;的&lt;code&gt;initWithCoder:&lt;/code&gt;方法将使用其派生子类的类名作为xib的名字，因此子类和其所对应的xib文件应该使用相同的命名。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;XibBridgeBaseView&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (instancetype)initWithCoder:(&lt;span class=&quot;built_in&quot;&gt;NSCoder&lt;/span&gt; *)aDecoder &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; = [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; initWithCoder:aDecoder];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; setupXibBridgeWithPlaceholderViewNibName:&lt;span class=&quot;built_in&quot;&gt;NSStringFromClass&lt;/span&gt;([&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; class])];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setupXibBridgeWithPlaceholderViewNibName:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)placeholderViewNibName &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; *contentView =[[[&lt;span class=&quot;built_in&quot;&gt;NSBundle&lt;/span&gt; mainBundle] loadNibNamed:placeholderViewNibName&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                        owner:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      options:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;] objectAtIndex:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; setBackgroundColor:[&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; clearColor]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; addSubview:contentView];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; setXibBridgeConstraintsToContentView:contentView];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中&lt;code&gt;- (void)setXibBridgeConstraintsToContentView:(UIView *)contentView&lt;/code&gt;方法主要是实现前文提到的通过向占位视图添加&lt;code&gt;NSLayoutRelationEqual&lt;/code&gt;约束让&lt;code&gt;placeholderView&lt;/code&gt;和&lt;code&gt;contentView&lt;/code&gt;的上下左右四个&lt;code&gt;NSLayoutAttribute&lt;/code&gt;分别完全相等：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;XibBridgeBaseView&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setXibBridgeConstraintsToContentView:(&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; *)contentView &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; addConstraints:[&lt;span class=&quot;built_in&quot;&gt;NSLayoutConstraint&lt;/span&gt; constraintsWithVisualFormat:&lt;span class=&quot;string&quot;&gt;@&quot;H:|[contentView]|&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                options:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                metrics:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                  views:&lt;span class=&quot;built_in&quot;&gt;NSDictionaryOfVariableBindings&lt;/span&gt;(contentView)]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; addConstraints:[&lt;span class=&quot;built_in&quot;&gt;NSLayoutConstraint&lt;/span&gt; constraintsWithVisualFormat:&lt;span class=&quot;string&quot;&gt;@&quot;V:|[contentView]|&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                options:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                metrics:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                  views:&lt;span class=&quot;built_in&quot;&gt;NSDictionaryOfVariableBindings&lt;/span&gt;(contentView)]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//为保证AutoLayout生效，必须加上下面这句话&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    contentView.translatesAutoresizingMaskIntoConstraints = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;实现占位视图的实际类&quot;&gt;&lt;a href=&quot;#实现占位视图的实际类&quot; class=&quot;headerlink&quot; title=&quot;实现占位视图的实际类&quot;&gt;&lt;/a&gt;实现占位视图的实际类&lt;/h3&gt;&lt;p&gt;作为&lt;code&gt;placeholderView&lt;/code&gt;的实际类，每创建一个需要被桥接的xib时就要创建一个对应的实际类(本文中为&lt;code&gt;CoverView&lt;/code&gt;类)，&lt;code&gt;CoverView&lt;/code&gt;中将包含在xib中定义的自定义UI相关的属性和操作：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CoverView&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;XibBridgeBaseView&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UILabel&lt;/span&gt; *headerLabel;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UIButton&lt;/span&gt; *submitButton;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; *contentView;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CoverView&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;IBAction&lt;/span&gt;)submitButtonClicked:(&lt;span class=&quot;built_in&quot;&gt;UIButton&lt;/span&gt; *)sender &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;Hello World!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为我们是用父storyboard或者xib来调用&lt;code&gt;placeholderView&lt;/code&gt;的，实际使用中只需要将&lt;code&gt;placeholderView&lt;/code&gt;的实际类继承于基类&lt;code&gt;xibBridgeBaseView&lt;/code&gt;，即可实现桥接功能。该&lt;code&gt;placeholderView&lt;/code&gt;的其他初始化工作可以放在&lt;code&gt;- awakeFromNib&lt;/code&gt;中进行&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CoverView&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)awakeFromNib &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contentView.backgroundColor = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; clearColor];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contentView.layer setBorderColor:[[&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; whiteColor] &lt;span class=&quot;built_in&quot;&gt;CGColor&lt;/span&gt;]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contentView.layer setBorderWidth:&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;在父的storyboard或者xib中调用placeholderView&quot;&gt;&lt;a href=&quot;#在父的storyboard或者xib中调用placeholderView&quot; class=&quot;headerlink&quot; title=&quot;在父的storyboard或者xib中调用placeholderView&quot;&gt;&lt;/a&gt;在父的storyboard或者xib中调用placeholderView&lt;/h3&gt;&lt;p&gt;做完以上步奏后，只需在父storyboard或者xib中拖一个&lt;code&gt;UIView&lt;/code&gt;来作为&lt;code&gt;placeholderView&lt;/code&gt;，并在identity inspector中将其class属性设置成为对应的&lt;code&gt;placeholderView&lt;/code&gt;的实际类即可。&lt;br&gt;&lt;img src=&quot;/images/set-class-for-placeholderView-in-storyboard.jpg&quot; alt=&quot;set-class-for-placeholderView-in-storyboard&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;结语&quot;&gt;&lt;a href=&quot;#结语&quot; class=&quot;headerlink&quot; title=&quot;结语&quot;&gt;&lt;/a&gt;结语&lt;/h2&gt;&lt;p&gt;在使用如上方法来进行xib桥接的过程中需要注意一下几点使用方式:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在父的storyboard或者xib中，只需要对拖入的&lt;code&gt;placeholderView&lt;/code&gt;添加AutoLayout约束即可&lt;/li&gt;
&lt;li&gt;在子xib中各个UI组件只需要跟&lt;code&gt;contentView&lt;/code&gt;建立AutoLayout约束即可&lt;/li&gt;
&lt;li&gt;对于&lt;code&gt;placeholderView&lt;/code&gt;的identity inspector相关参数需要在子xib中对File’s Owner进行设置&lt;/li&gt;
&lt;li&gt;对于&lt;code&gt;placeholderView&lt;/code&gt;的attribute inspector相关参数需要在父storyboard或者xib中进行设置&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;对于xib桥接问题大神SUNNYXX给出了一个&lt;a href=&quot;http://blog.sunnyxx.com/2014/07/01/ios_ib_bridge/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更高端的解决方案&lt;/a&gt;，利用到了iOS runtime相关的技术。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在iOS开发中，使用storyboard的某些场景下我们可能希望同时使用xib定义一些可以重复利用的view，并在storyboard中调用。本文将分享一种此类xib bridge的简单实现方式。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://wty.im/categories/iOS/"/>
    
    
      <category term="iOS开发" scheme="http://wty.im/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="Inteface Builder" scheme="http://wty.im/tags/Inteface-Builder/"/>
    
  </entry>
  
  <entry>
    <title>iOS9 ATS特性以及在Xcode7中针对iOS9开启不安全的http连接</title>
    <link href="http://wty.im/2015/09/22/iOS9-ATS-Feature-and-enable-insecure-http-connection-in-xcode7/"/>
    <id>http://wty.im/2015/09/22/iOS9-ATS-Feature-and-enable-insecure-http-connection-in-xcode7/</id>
    <published>2015-09-22T07:41:22.000Z</published>
    <updated>2016-07-09T06:57:08.000Z</updated>
    
    <content type="html">&lt;p&gt;在iOS9中Apple新增了&lt;a href=&quot;https://developer.apple.com/library/ios/releasenotes/General/WhatsNewIniOS/Articles/iOS9.html#//apple_ref/doc/uid/TP40016198-SW14&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;App Transport Security&lt;/a&gt;(ATS)特性，其主要目的就是规定了App与服务器通信时将默认要求使用安全的连接，旨在提高App的安全性，APP在使用higher-level API（如NSURLConnection, NSURLSession等）进行通信时如果不采用TLS 1.2协议进行传输，iOS将会报错。Apple推荐创建新的App和在更新已有的App时都应尽快对ATS进行适配。本文将介绍在Xcode7中对ATS进行配置。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当我们在iOS9下直接使用HTTP连接时，会出现如下错误：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;App Transport Security has blocked a cleartext HTTP (http://) resource load since it is insecure.  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Temporary exceptions can be configured via your app&amp;apos;s Info.plist file.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果你希望暂时不适配ATS，则可以在项目的info.plist中添加如下配置，使所有未特殊指定的连接都不开启ATS特性，即允许明文传输的Http连接。其中&lt;code&gt;&amp;lt;key&amp;gt;NSAppTansportSecurtiy&amp;lt;/key&amp;gt;&lt;/code&gt;是ATS配置的根节点&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;NSAppTransportSecurity&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;NSAllowsArbitraryLoads&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;true&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/images/ATSAllowsArbitraryLoads.jpg&quot; alt=&quot;ATSAllowsArbitraryLoads&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果你希望适配ATS，则需注意ATS特性有如下三个需求&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;必须要基于TLS 1.2版本进行安全传输&lt;/li&gt;
&lt;li&gt;加密方式必须只能是支持前向加密的方法&lt;/li&gt;
&lt;li&gt;证书必须至少使用SHA256的Fingerprint和至少2048bit的RSA Key或者至少256bit的Elliptic-Curve(ECC)Key&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ATS接受如下加密方法:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384&lt;/code&gt;&lt;br&gt;&lt;code&gt;TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256&lt;/code&gt;&lt;br&gt;&lt;code&gt;TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384&lt;/code&gt;&lt;br&gt;&lt;code&gt;TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA&lt;/code&gt;&lt;br&gt;&lt;code&gt;TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256&lt;/code&gt;&lt;br&gt;&lt;code&gt;TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA&lt;/code&gt;&lt;br&gt;&lt;code&gt;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384&lt;/code&gt;&lt;br&gt;&lt;code&gt;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256&lt;/code&gt;&lt;br&gt;&lt;code&gt;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384&lt;/code&gt;&lt;br&gt;&lt;code&gt;TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256&lt;/code&gt;&lt;br&gt;&lt;code&gt;TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果开启了ATS但是访问的安全连接不符合上述三个条件的任意一个，就会报错。可以通过在info.plist中对个别域名配置例外情况来允许非安全连接或者不完全支持ATS的安全连接。可以参考如下的例子&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;NSAppTransportSecurity&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;NSExceptionDomains&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;wty.im&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;NSIncludesSubdomains&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;true&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;NSExceptionRequiresForwardSecrecy&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;false&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;NSExceptionAllowsInsecureHTTPLoads&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;true&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;NSExceptionMinimumTLSVersion&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;1.1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;所有可以设置的参数如下：&lt;/p&gt;
&lt;!--| 参数 | 类型 | 默认值 | 说明|
|-----|:----:|:----:|----|
|NSAppTransportSecurity|Dictionary|N/A|ATS配置的根节点，用于覆盖默认的设置|
|NSAllowsArbitraryLoads|Boolean|NO|配置针对没有在NSExceptionDomain中详细列出的其他域名是否启用ATS特性|
|　NSExceptionDomains|Dictionary|N/A|存储域名详细配置的根节点|
|　　\&lt;domain-name-for-exception-as-string\&gt;|Dictionary|N/A|域名|
|　　　NSExceptionMinimumTLSVersionString|String|TLSV1.2|配置该域名支持的最低TLS版本，支持TLSv1.0, TLSv1.1, TLSv1.2三个选项|
|　　　NSExceptionRequiresForwardSecrecy|Boolean|YES|配置该域名是否是要支持前向加密|
|　　　NSExceptionAllowsInsecureHTTPLoads|Boolean|NO|配置是否允许对该域名采用非安全链接|
|　　　NSIncludesSubdomains|Boolean|NO|配置此套配置是否同样适用于该域名的所有子域名|
|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;NSThirdPartyExceptionMinimumTLSVersion|String|N/A|当此域名不为开发者控制时，采用此配置|
|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;NSThirdPartyExceptionRequiresForwardSecrecy|Boolean|N/A|当此域名不为开发者控制时，采用此配置|
|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;NSThirdPartyExceptionAllowsInsecureHTTPLoads|Boolean|N/A|当此域名不为开发者控制时，采用此配置|--&gt;
&lt;p&gt;&lt;img src=&quot;/images/ATSSetting.jpg&quot; alt=&quot;ATSSetting&quot;&gt;&lt;/p&gt;
&lt;p&gt;当NSExceptionRequiresForwardSecrecy设置为NO时，ATS将额外支持以下加密方法：&lt;br&gt;&lt;code&gt;TLS_RSA_WITH_AES_256_GCM_SHA384&lt;/code&gt;&lt;br&gt;&lt;code&gt;TLS_RSA_WITH_AES_128_GCM_SHA256&lt;/code&gt;&lt;br&gt;&lt;code&gt;TLS_RSA_WITH_AES_256_CBC_SHA256&lt;/code&gt;&lt;br&gt;&lt;code&gt;TLS_RSA_WITH_AES_256_CBC_SHA&lt;/code&gt;&lt;br&gt;&lt;code&gt;TLS_RSA_WITH_AES_128_CBC_SHA256&lt;/code&gt;&lt;br&gt;&lt;code&gt;TLS_RSA_WITH_AES_128_CBC_SHA&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;更多ATS的信息可以参考iOS Developer Library的&lt;a href=&quot;https://developer.apple.com/library/ios/technotes/App-Transport-Security-Technote/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;App Transport Security Technote&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在iOS9中Apple新增了&lt;a href=&quot;https://developer.apple.com/library/ios/releasenotes/General/WhatsNewIniOS/Articles/iOS9.html#//apple_ref/doc/uid/TP40016198-SW14&quot;&gt;App Transport Security&lt;/a&gt;(ATS)特性，其主要目的就是规定了App与服务器通信时将默认要求使用安全的连接，旨在提高App的安全性，APP在使用higher-level API（如NSURLConnection, NSURLSession等）进行通信时如果不采用TLS 1.2协议进行传输，iOS将会报错。Apple推荐创建新的App和在更新已有的App时都应尽快对ATS进行适配。本文将介绍在Xcode7中对ATS进行配置。&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://wty.im/categories/iOS/"/>
    
    
      <category term="iOS开发" scheme="http://wty.im/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="Xcode7" scheme="http://wty.im/tags/Xcode7/"/>
    
      <category term="iOS9" scheme="http://wty.im/tags/iOS9/"/>
    
  </entry>
  
  <entry>
    <title>Mac实用软件推荐</title>
    <link href="http://wty.im/2015/08/16/mac-useful-application/"/>
    <id>http://wty.im/2015/08/16/mac-useful-application/</id>
    <published>2015-08-16T04:41:22.000Z</published>
    <updated>2016-03-03T06:12:53.000Z</updated>
    
    <content type="html">&lt;p&gt;这篇文章主要是记录我在Mac上遇到的一些好用的软件，很多非常常见的我就没有列出来了，当我遇到了新的我会在这里更新。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.zsh.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;zsh&lt;/a&gt;和&lt;a href=&quot;http://ohmyz.sh/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;oh-my-zsh&lt;/a&gt;：这个不算是mac的软件，我在任何一个unix-like系统中的默认shell都会改为zsh并用oh-my-zsh进行配置，效率大大提升。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.iterm2.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iterm2&lt;/a&gt;：&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.genymotion.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;genymotion&lt;/a&gt;：一个速度非常快的android开发时用到的设备模拟器，完爆google的模拟器。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pilotmoon.com/scrollreverser/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;scroll reverser&lt;/a&gt;：可以很方便的分别选择鼠标和触控板是否翻转滑动模式，这样鼠标和触控板都能以我们习惯的方式上下滚动屏幕啦。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://brew.sh/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;homebrew&lt;/a&gt;和&lt;a href=&quot;http://caskroom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;brew cask&lt;/a&gt;：前者是mac上非常好用的包管理软件，后者是基于homebrew构建的可以安装Mac Application的软件，免去了安装Mac软件时在网上搜索、下载和拖拽至Application目录的过程。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ohdarling/GoAgentX&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GoAgentX&lt;/a&gt;：goagent在Mac上的GUI，用于翻墙，不过最近goagent总是不太稳定。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://25.io/mou/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mou&lt;/a&gt;和&lt;a href=&quot;https://github.com/uranusjr/macdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Macdown&lt;/a&gt;：两者都是Mac上的Markdown编辑器，前者开始收费了，后者是模仿前者的开源版本&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.boastr.de/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;better touch tool&lt;/a&gt;：十分好用的手势自定义软件，可以自定义触摸板，Magic Mouse和普通鼠标的各种手势对应的功能。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cheatsheetapp.com/CheatSheet/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cheatsheet&lt;/a&gt;：按住Command键就能显示当前程序所有的系统默认快捷键。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cockos.com/licecap/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;licecap&lt;/a&gt;：录制gif格式图片的一个软件，可以设定分辨率和最大帧率，软件支持自动识别设定实时真率，使用起来很流畅。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jetbrains.com/pycharm/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pycharm&lt;/a&gt;：Python IDE，我觉得是Mac上开发python最好用的软件，有社区版和专业版，社区版免费，专业版支持各种框架。喷脑浆公司出了一系列的针对各种编程语言的IDE，体验很一致也很不错。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.irradiatedsoftware.com/sizeup/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SizeUp&lt;/a&gt;：Mac自带的窗口控制太弱了，这个软件可以定义各种快捷键实现各种方式的窗口resize，非常方便。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://visualdiffer.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;VisualDiffer&lt;/a&gt;：一个可以比较两个文件或者文件夹之间差异的软件。同类的软件还有一个跨平台的&lt;a href=&quot;http://www.scootersoftware.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Beyound Compare&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://coppertino.com/vox/mac&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Vox&lt;/a&gt;：一个轻量级的但是功能强劲的音乐播放软件，支持各种音频格式，包括无损的各种格式，软件UI的感觉也不错。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To be continue…&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章主要是记录我在Mac上遇到的一些好用的软件，很多非常常见的我就没有列出来了，当我遇到了新的我会在这里更新。&lt;/p&gt;
    
    </summary>
    
      <category term="Tech" scheme="http://wty.im/categories/Tech/"/>
    
    
      <category term="Mac" scheme="http://wty.im/tags/Mac/"/>
    
      <category term="App" scheme="http://wty.im/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>管理linux下软件的配置文件dotfile(rc files)</title>
    <link href="http://wty.im/2015/08/14/use-rcm-to-manage-your-dotfile-rc-file/"/>
    <id>http://wty.im/2015/08/14/use-rcm-to-manage-your-dotfile-rc-file/</id>
    <published>2015-08-14T13:57:05.000Z</published>
    <updated>2016-03-03T06:12:02.000Z</updated>
    
    <content type="html">&lt;p&gt;在linux下，各种软件的配置文件大多存储于以“.”开头以“rc”结尾的文件中并存放于用户的个人目录~/中，也就是俗称的dotfile或者rc file，例如zsh的配置文件.zshrc，vim的配置文件.vimrc等等。&lt;/p&gt;
&lt;p&gt;当我们初次使用一些软件时经常会花大量时间对相应的dotfile(rc file)进行配置，让软件以符合我们期望的方式工作，在使用时也时常会对dotfile进行调整。但是当我们希望在新电脑上恢复多个软件配置或者在多台电脑上共享一台电脑对dotfile的修改时，逐一对各个dotfile进行管理非常不方便。&lt;/p&gt;
&lt;p&gt;所以我来介绍一下我管理dotfile的方式&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;所需软件介绍&quot;&gt;&lt;a href=&quot;#所需软件介绍&quot; class=&quot;headerlink&quot; title=&quot;所需软件介绍&quot;&gt;&lt;/a&gt;所需软件介绍&lt;/h2&gt;&lt;p&gt;我在管理dotfile时用到的软件是在Github上开源的&lt;a href=&quot;https://github.com/thoughtbot/rcm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rc file management(rcm)软件&lt;/a&gt;，这个软件主要思想就是将所有你希望用rcm管理的dotfile移动并集中存储在一个目录中（默认是在~/.dotflies下），并在你的个人目录下创建所有被rcm管理的dotfile的符号连接(symlink)。如果你熟悉这个软件可以看看&lt;a href=&quot;/2015/08/14/use-rcm-to-manage-your-dotfile-rc-file/#我的日常使用方法&quot;&gt;我的日常使用方法&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;我们可以在该集中存储目录下建立git repository进行版本控制，同时也可托管到github或gitcafe上方便多台机器共享。当你希望使用别人分享给你的rcm目录下的dotfile时则rcm可以利用多目录存储管理功能，同时调用多个分享目录下的文件。&lt;/p&gt;
&lt;p&gt;这套软件主要包括了一下4个命令和一个配置dotfile文件~/.rcrc(注意在安装好rcm后不会有配置文件，若要使用需手动创建）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lsrc&lt;/code&gt;：列出当前所有通过rcm管理的dotfile，以及其对应的符号链接位置&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mkrc&lt;/code&gt;：将指定的dotfile移动至你的集中存储目录，并在~/目录下创建相应的符号链接&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rcup&lt;/code&gt;：根据rcm管理的dotfiles更新当前用户目录下已存在的符号链接或创建新的符号链接&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rcdn&lt;/code&gt;：删除通过rcm创建的dotfile的符号链接&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;安装RCM&quot;&gt;&lt;a href=&quot;#安装RCM&quot; class=&quot;headerlink&quot; title=&quot;安装RCM&quot;&gt;&lt;/a&gt;安装RCM&lt;/h2&gt;&lt;p&gt;我主要是用Mac和Ubuntu，他们的安装方法如下&lt;/p&gt;
&lt;h3 id=&quot;Mac&quot;&gt;&lt;a href=&quot;#Mac&quot; class=&quot;headerlink&quot; title=&quot;Mac&quot;&gt;&lt;/a&gt;Mac&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew tap thoughtbot/formulae&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brew install rcm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Ubuntu&quot;&gt;&lt;a href=&quot;#Ubuntu&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu&quot;&gt;&lt;/a&gt;Ubuntu&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo add-apt-repository ppa:martin-frost/thoughtbot-rcm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install rcm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Arch-Linux&quot;&gt;&lt;a href=&quot;#Arch-Linux&quot; class=&quot;headerlink&quot; title=&quot;Arch Linux&quot;&gt;&lt;/a&gt;Arch Linux&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://aur.archlinux.org/packages/rcm/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://aur.archlinux.org/packages/rcm/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Debian-based&quot;&gt;&lt;a href=&quot;#Debian-based&quot; class=&quot;headerlink&quot; title=&quot;Debian-based&quot;&gt;&lt;/a&gt;Debian-based&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https://thoughtbot.github.io/rcm/debs/rcm_1.2.3-1_all.deb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sha=$(sha256sum rcm_1.2.3-1_all.deb | cut &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt;1 &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$sha&lt;/span&gt;&quot;&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;fb8ec2611cd4d519965b66fcf950bd93d7593773659f83a8612053217daa38b4&quot;&lt;/span&gt; ] &amp;amp;&amp;amp; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo dpkg -i rcm_1.2.3-1_all.deb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Gentoo-based-including-Funtoo&quot;&gt;&lt;a href=&quot;#Gentoo-based-including-Funtoo&quot; class=&quot;headerlink&quot; title=&quot;Gentoo-based (including Funtoo)&quot;&gt;&lt;/a&gt;Gentoo-based (including Funtoo)&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo emerge layman&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo layman &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; --overlays https://github.com/bronislav/overlays/raw/master/layman.xml --add bronislav&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo emerge rcm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;OpenBSD-current&quot;&gt;&lt;a href=&quot;#OpenBSD-current&quot; class=&quot;headerlink&quot; title=&quot;OpenBSD(-current)&quot;&gt;&lt;/a&gt;OpenBSD(-current)&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo pkg_add rcm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;openSUSE-RHEL-CentOS&quot;&gt;&lt;a href=&quot;#openSUSE-RHEL-CentOS&quot; class=&quot;headerlink&quot; title=&quot;openSUSE/RHEL/CentOS&quot;&gt;&lt;/a&gt;openSUSE/RHEL/CentOS&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://software.opensuse.org/download.html?project=utilities&amp;amp;package=rcm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://software.opensuse.org/download.html?project=utilities&amp;amp;package=rcm&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;其他Linux发行版&quot;&gt;&lt;a href=&quot;#其他Linux发行版&quot; class=&quot;headerlink&quot; title=&quot;其他Linux发行版&quot;&gt;&lt;/a&gt;其他Linux发行版&lt;/h3&gt;&lt;p&gt;这个软件使用了标准GNU autotools，可以尝试一下方法编译安装&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -LO https://thoughtbot.github.io/rcm/dist/rcm-1.2.3.tar.gz &amp;amp;&amp;amp; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sha=$(sha256 rcm-1.2.3.tar.gz | cut &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt;1 &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;) &amp;amp;&amp;amp; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$sha&lt;/span&gt;&quot;&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;502fd44e567ed0cfd00fb89ccc257dac8d6eb5d003f121299b5294c01665973f&quot;&lt;/span&gt; ] &amp;amp;&amp;amp; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar -xvf rcm-1.2.3.tar.gz &amp;amp;&amp;amp; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; rcm-1.2.3 &amp;amp;&amp;amp; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure &amp;amp;&amp;amp; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make &amp;amp;&amp;amp; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;RCM使用方法&quot;&gt;&lt;a href=&quot;#RCM使用方法&quot; class=&quot;headerlink&quot; title=&quot;RCM使用方法&quot;&gt;&lt;/a&gt;RCM使用方法&lt;/h2&gt;&lt;p&gt;接下来介绍一下我的使用方式&lt;/p&gt;
&lt;h3 id=&quot;通过mkrc命令创建Dotfiles管理目录&quot;&gt;&lt;a href=&quot;#通过mkrc命令创建Dotfiles管理目录&quot; class=&quot;headerlink&quot; title=&quot;通过mkrc命令创建Dotfiles管理目录&quot;&gt;&lt;/a&gt;通过mkrc命令创建Dotfiles管理目录&lt;/h3&gt;&lt;p&gt;如果你是第一次在本地使用rcm，则可以通过mkrc命令来创建dotfiles管理目录，并指定要用使用rcm管理哪些文件.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkrc .zshrc .zsh-custom&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;命令执行完毕后，会将你指定的dotfile默认移动到~/.dotfiles目录下并重命名将文件名前的“.”去掉，同时在~/目录下创建相应的符号链接，如果你的dotfile是存储在某个文件夹下时，例如~/.example/config, 则程序会将文件拷贝至~/.dotfiles/example/config，并在原目录中创建符号连接&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ls &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt; ~/dotfiles&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; -rw-r--r--  1 Rain staff 1065 8 15 13:20 zshrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; drwxr-xr-x  3 Rain staff 102B 8 15 13:20 zsh-custom&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ls &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt; .zshrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; lrwxr-xr-x  1 Rain staff 35B 8 15 13:20 .zshrc -&amp;gt; /Users/Rain/.dotfiles/zshrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ls &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt; .zsh-custom/themes/wty.zsh-theme &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; lrwxr-xr-x  1 Rain staff 61 8 15 13:20 .zsh-custom/themes/wty.zsh-theme -&amp;gt; /Users/Rain/.dotfiles/tag-zsh/zsh-custom/themes/wty.zsh-theme&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此时你可以使用git在~/.dotfiles目录下创建仓库进行版本管理&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/.dotfiles&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;These are my config dotfiles&quot;&lt;/span&gt; &amp;gt;&amp;gt; README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -m &lt;span class=&quot;string&quot;&gt;&quot;initial commit&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果你希望更改创建的dotfiles管理目录的位置，可以通过在mkrc命令中带上-d参数，或者&lt;br&gt;在~/.rcrc配置文件中配置默认的目录&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkrc &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; ~/.mydotfiles .zshrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#in ~/.rcrc file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#此参数可以设置多个目录，为其余几个命令服务，对mkrc命令来说第一个目录为默认目录,若不填写则~/.dotfiles为默认目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DOTFILES_DIRS=&lt;span class=&quot;string&quot;&gt;&quot;~/.mydotfiles&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;由于rcm软件的设计问题，请勿对已经由rcm管理并创建的符号连接使用mkrc命令，否则会让~/.dotfiles下的文件变成指向自己的符号链接并丢失源文件。&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;为了避免符号链接带来的问题，我们可以在使用mkrc命令时带上“-C”参数来改变创建符号链接的行为，或者在~/.rcrc文件中加入如下参数，将所有创建符号链接的行为都改为拷贝，这个将影响所有的rcm命令&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#in ~/.rcrc files&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;COPY_ALWAYS=&lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkrc -C .zshrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我最开始尝试使用这个软件的时候因为这个问题导致丢失了.zshrc，而且并未备份，又得重新配置一遍，幸好有&lt;a href=&quot;http://ohmyz.sh/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;oh-my-zsh&lt;/a&gt;，Orz..&lt;/p&gt;
&lt;p&gt;&lt;code&gt;但是使用符号链接的好处就是当你对~目录下我的dotfile进行修改时，相当于直接对dotfiles管理目录中的文件进行了修改，这样备份更加方便&lt;/code&gt;，我认为只要小心一点还是符号链接更加方便，如何取舍就看大家啦。&lt;/p&gt;
&lt;h3 id=&quot;mkrc命令高级用法&quot;&gt;&lt;a href=&quot;#mkrc命令高级用法&quot; class=&quot;headerlink&quot; title=&quot;mkrc命令高级用法&quot;&gt;&lt;/a&gt;mkrc命令高级用法&lt;/h3&gt;&lt;p&gt;mkrc命令还支持将dotfiles通过tags分类存放，可以方便的对不同软件的配置文件进行分类管理，比如通过如下命令创建dotfiles管理目录,&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir -t zsh .zshrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此命令将会在./dotfiles目录下创建以“tag-”开头的目录，效果如下&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ls &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt; ~/.dotfiles/tag-zsh/zshrc                                                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; -rw-------  1 Rain  staff  1065  8 15 15:42 .dotfiles/tag-zsh/zshrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;mkrc还能根据hostname来进行分类管理，mkrc的更多参数请查看man page &lt;a href=&quot;http://thoughtbot.github.io/rcm/mkrc.1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mkrc(1)&lt;/a&gt;&lt;br&gt;在使用了mkrc的分类管理参数后会影响到接下来要介绍的rcup命令的行为&lt;/p&gt;
&lt;h3 id=&quot;通过rcup命令更新dotfiles&quot;&gt;&lt;a href=&quot;#通过rcup命令更新dotfiles&quot; class=&quot;headerlink&quot; title=&quot;通过rcup命令更新dotfiles&quot;&gt;&lt;/a&gt;通过rcup命令更新dotfiles&lt;/h3&gt;&lt;h4 id=&quot;基础用法&quot;&gt;&lt;a href=&quot;#基础用法&quot; class=&quot;headerlink&quot; title=&quot;基础用法&quot;&gt;&lt;/a&gt;基础用法&lt;/h4&gt;&lt;p&gt;当你没有使用任何分类管理参数时，你的所有dotfile应该都存储在~/.dotfiles目录下，此时你只需要简单的执行rcup命令，则rcm会在~目录下创建所有~/.dotfiles下文件对应的符号链接，当配置了COPY_ALWAYS=“*”时则会改为拷贝，若~目录下存在对应文件且内容不同时，会提示是否覆盖。且若~、。dotfiles中的文件夹在~中不存在时会自动创建，样例如下&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rcup -v   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; identical /Users/Rain/.rcrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;string&quot;&gt;&#39;~/.dotfiles/tag-zsh/zsh-custom/themes/wty.zsh-theme&#39;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;~/.zsh-custom/themes/wty.zsh-theme&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; overwrite /Users/Rain/.zshrc? [ynaq] y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; removed &lt;span class=&quot;string&quot;&gt;&#39;/Users/Rain/.zshrc&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;string&quot;&gt;&#39;/Users/Rain/.dotfile/zshrc&#39;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;/Users/Rain/.zshrc&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;高级用法&quot;&gt;&lt;a href=&quot;#高级用法&quot; class=&quot;headerlink&quot; title=&quot;高级用法&quot;&gt;&lt;/a&gt;高级用法&lt;/h4&gt;&lt;p&gt;当不加任何参数时，rcup默认只将没有通过tag进行分类的且如果通过hostname分类了则分类hostname与本地hostname相同的dotfiles更新至你的~目录&lt;/p&gt;
&lt;p&gt;当你使用tag来构建你的dotefile目录时，你可以通过给rcup命令加上“-t”参数或者在~/.rcrc中配置TAGS=”tag1 tag2”来更新相应分类下的dotfiles，或者加上“-B”参数来指定一个hostname或在~/.rcrc文件中配置HOSTNAME参数，从而取消自动计算hostname。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;如果加了“-t”参数以后，lsrc，rcup和rcdn命令都只会加载没有用tag分类的和“-t”参数给出的tag相关的dotfile，其他tag下的dotfiles不会被加载&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;你可以通过lsrc命令查看当前rcup命令能作用于哪些dotfiles，如果要查询有哪些tag，只需进入~/.dotfiles目录查看那些以“tag-”开头的目录即可。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;lsrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; /Users/Rain/.rcrc:/Users/Rain/.dotfiles/rcrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lsrc -t zsh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; /Users/Rain/.rcrc:/Users/Rain/.dotfiles/rcrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; /Users/Rain/.zshrc:/Users/Rain/.dotfiles/tag-zsh/zshrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rcup -v -t zsh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; identical /Users/Rain/.rcrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;string&quot;&gt;&#39;/Users/Rain/.dotfiles/tag-zsh/zshrc&#39;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;/Users/Rain/.zshrc&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当你希望rcup同时载入多个dotfiles管理目录，比如当你使用他人分享给你的通过rcm创建的dotfiles管理目录时，你可以使用rcup的“-d”参数来指定从哪个文件夹来更新~目录下的文件&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rcup &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; ~/.SarahDotfiles -t zsh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;string&quot;&gt;&#39;/Users/Rain/Download/.SarahDotfiles/tag-zsh/zshrc&#39;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;/Users/Rain/.zshrc&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;我的日常使用方法&quot;&gt;&lt;a href=&quot;#我的日常使用方法&quot; class=&quot;headerlink&quot; title=&quot;我的日常使用方法&quot;&gt;&lt;/a&gt;我的日常使用方法&lt;/h2&gt;&lt;p&gt;一般我的使用方法是，使用一个dotfiles管理目录统一管理dotfiles，并在该目录里建立git repository进行版本控制&lt;/p&gt;
&lt;p&gt;其中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rcm的配置dotfiles .rcrc以tag rcm分类&lt;/li&gt;
&lt;li&gt;同一个软件的所有dotfile配置文件都通过一个tag来分类管理&lt;/li&gt;
&lt;li&gt;在.rcrc中配置TAGS=“所有以用于分类的tags”&lt;/li&gt;
&lt;li&gt;在.rcrc中配置EXCLUDES=”忽略dotfiles管理目录中的某些文件”，比如github的README.md等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当迁移到新的电脑上时，将dotfiles管理目录放置于~/.dotfiles，并采用如下方法&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#1.恢复rcm的dotfile&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rcup -t rcm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#2.查看当前有哪些可以恢复的dotfiles&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lsrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#3.因为.rcrc配置中已经配置了原电脑所有的分类，则可以直接全部恢复&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rcup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#4.若只想部分恢复，则指定tag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rcup -t zsh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当使用别人分享过来的dotfiles管理目录时，采用如下方法&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#1.取消自己对应的配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rcdn -t zsh -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; removed &lt;span class=&quot;string&quot;&gt;&#39;/Users/Rain/.zshrc&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#2.将别人的对应配置符号连接过来，进行测试&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rcup &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; ~/.SarahDotfiles -t zsh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;string&quot;&gt;&#39;/Users/Rain/Download/.SarahDotfiles/tag-zsh/zshrc&#39;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;/Users/Rain/.zshrc&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#3.如果不满意则取消对方的配置，并重新链接回自己的配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rcdn &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; ~/.SarahDotfiles -t zsh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rcup -t zsh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#4.如果满意则copy对方的配置到我的~目录，在自己重建dotfiles管理目录中对应的文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rcup &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; ~/.SarahDotfiles -t zsh -C&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkrc .zshrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#5.使用git对自己的dotfiles管理目录进行版本管理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更多使用方法请参考man page &lt;a href=&quot;http://thoughtbot.github.io/rcm/rcup.1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rcup(1)&lt;/a&gt;, &lt;a href=&quot;http://thoughtbot.github.io/rcm/mkrc.1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mkrc(1)&lt;/a&gt;, &lt;a href=&quot;http://thoughtbot.github.io/rcm/rcdn.1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rcdn(1)&lt;/a&gt;, &lt;a href=&quot;http://thoughtbot.github.io/rcm/lsrc.1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;lsrc(1)&lt;/a&gt;, &lt;a href=&quot;http://thoughtbot.github.io/rcm/rcrc.5.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rcrc(5)&lt;/a&gt;和&lt;a href=&quot;http://thoughtbot.github.io/rcm/rcm.7.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rcm(7)&lt;/a&gt; quick start tutorial.&lt;/p&gt;
&lt;p&gt;I&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在linux下，各种软件的配置文件大多存储于以“.”开头以“rc”结尾的文件中并存放于用户的个人目录~/中，也就是俗称的dotfile或者rc file，例如zsh的配置文件.zshrc，vim的配置文件.vimrc等等。&lt;/p&gt;
&lt;p&gt;当我们初次使用一些软件时经常会花大量时间对相应的dotfile(rc file)进行配置，让软件以符合我们期望的方式工作，在使用时也时常会对dotfile进行调整。但是当我们希望在新电脑上恢复多个软件配置或者在多台电脑上共享一台电脑对dotfile的修改时，逐一对各个dotfile进行管理非常不方便。&lt;/p&gt;
&lt;p&gt;所以我来介绍一下我管理dotfile的方式
    
    </summary>
    
      <category term="Linux" scheme="http://wty.im/categories/Linux/"/>
    
    
      <category term="rc-file" scheme="http://wty.im/tags/rc-file/"/>
    
      <category term="dotfile" scheme="http://wty.im/tags/dotfile/"/>
    
      <category term="rcm" scheme="http://wty.im/tags/rcm/"/>
    
      <category term="linux" scheme="http://wty.im/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>创建Git独立分支</title>
    <link href="http://wty.im/2015/08/12/create-orphan-git-branch/"/>
    <id>http://wty.im/2015/08/12/create-orphan-git-branch/</id>
    <published>2015-08-11T16:00:00.000Z</published>
    <updated>2016-03-03T06:11:38.000Z</updated>
    
    <content type="html">&lt;p&gt;在使用git进行版本控制的某些场景中我们可能需要在一个项目中建立完全独立的分支，此分支将作为一个独立的版本历史根节点，不与之前任何分支拥有相同的版本祖先。&lt;/p&gt;
&lt;p&gt;比如当我们要在一个项目中使用一个分支进行项目文档的管理时，或者当我们想要发布一个软件的开源版本但又不希望将软件的版本历史暴露给外界时，都可以使用以下的方法建立一个独立分支。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;通过带orphan参数的checkout命令建立独立分支&quot;&gt;&lt;a href=&quot;#通过带orphan参数的checkout命令建立独立分支&quot; class=&quot;headerlink&quot; title=&quot;通过带orphan参数的checkout命令建立独立分支&quot;&gt;&lt;/a&gt;通过带orphan参数的checkout命令建立独立分支&lt;/h2&gt;&lt;p&gt;通过带有–orphan参数的checkout命令即可从start_point或者HEAD创建一个独立分支&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$cd&lt;/span&gt; repo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$git&lt;/span&gt; checkout --orphan 新分支名 &amp;lt;start_point&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;创建全新的独立分支&quot;&gt;&lt;a href=&quot;#创建全新的独立分支&quot; class=&quot;headerlink&quot; title=&quot;创建全新的独立分支&quot;&gt;&lt;/a&gt;创建全新的独立分支&lt;/h2&gt;&lt;p&gt;如果希望创建全新的独立分支，例如用于文档管理，则还需要进行如下删除操作&lt;br&gt;注意如果有不在索引中的文件，则需要手工删除(包括.gitignore)&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#删除此分支中的索引及索引中的所有文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$git&lt;/span&gt; rm -rf .&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;开始工作&quot;&gt;&lt;a href=&quot;#开始工作&quot; class=&quot;headerlink&quot; title=&quot;开始工作&quot;&gt;&lt;/a&gt;开始工作&lt;/h2&gt;&lt;p&gt;当前独立分支还需要创建git索引并initial commit后才能正常工作&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$&amp;lt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; your work&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#创建git索引&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$git&lt;/span&gt; add .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#initial commit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$git&lt;/span&gt; commit &lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt; -m &lt;span class=&quot;string&quot;&gt;&quot;initial commit&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#push到远端仓库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$git&lt;/span&gt; push origin 新分支名&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在使用git进行版本控制的某些场景中我们可能需要在一个项目中建立完全独立的分支，此分支将作为一个独立的版本历史根节点，不与之前任何分支拥有相同的版本祖先。&lt;/p&gt;
&lt;p&gt;比如当我们要在一个项目中使用一个分支进行项目文档的管理时，或者当我们想要发布一个软件的开源版本但又不希望将软件的版本历史暴露给外界时，都可以使用以下的方法建立一个独立分支。&lt;br&gt;
    
    </summary>
    
      <category term="Dev" scheme="http://wty.im/categories/Dev/"/>
    
    
      <category term="Git" scheme="http://wty.im/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://wty.im/2015/08/11/hello-world/"/>
    <id>http://wty.im/2015/08/11/hello-world/</id>
    <published>2015-08-10T16:00:00.000Z</published>
    <updated>2016-03-03T17:18:29.000Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;http://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;http://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;http://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;http://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;http://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
      <category term="Tech" scheme="http://wty.im/categories/Tech/"/>
    
    
  </entry>
  
</feed>
